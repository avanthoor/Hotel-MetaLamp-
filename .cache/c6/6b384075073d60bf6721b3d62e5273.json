{"id":"UI-kit.pug","dependencies":[{"name":"C:\\Users\\vzhuk\\OneDrive\\Documents\\GitHub\\Hotel-MetaLamp-\\src\\components\\text-field\\text-field.pug","includedInParent":true,"mtime":1637178949321},{"name":"C:\\Users\\vzhuk\\OneDrive\\Documents\\GitHub\\Hotel-MetaLamp-\\src\\components\\text-field\\__subscription\\text-field__subscription.pug","includedInParent":true,"mtime":1636114718226},{"name":"C:\\Users\\vzhuk\\OneDrive\\Documents\\GitHub\\Hotel-MetaLamp-\\src\\components\\material-icons\\material-icons.pug","includedInParent":true,"mtime":1638814048850},{"name":"C:\\Users\\vzhuk\\OneDrive\\Documents\\GitHub\\Hotel-MetaLamp-\\src\\components\\text-field\\__dropdown\\text-field__dropdown.pug","includedInParent":true,"mtime":1637966049330},{"name":"./styles\\UI-kit.scss","dynamic":true,"resolved":"C:\\Users\\vzhuk\\OneDrive\\Documents\\GitHub\\Hotel-MetaLamp-\\styles\\UI-kit.scss","parent":"C:\\Users\\vzhuk\\OneDrive\\Documents\\GitHub\\Hotel-MetaLamp-\\UI-kit.pug"},{"name":"./src\\components\\text-field\\mask.js","dynamic":true,"resolved":"C:\\Users\\vzhuk\\OneDrive\\Documents\\GitHub\\Hotel-MetaLamp-\\src\\components\\text-field\\mask.js","parent":"C:\\Users\\vzhuk\\OneDrive\\Documents\\GitHub\\Hotel-MetaLamp-\\UI-kit.pug"},{"name":"./src\\components\\text-field\\__dropdown\\text-field__dropdown.js","dynamic":true,"resolved":"C:\\Users\\vzhuk\\OneDrive\\Documents\\GitHub\\Hotel-MetaLamp-\\src\\components\\text-field\\__dropdown\\text-field__dropdown.js","parent":"C:\\Users\\vzhuk\\OneDrive\\Documents\\GitHub\\Hotel-MetaLamp-\\UI-kit.pug"}],"generated":{"html":"<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><link rel=\"stylesheet\" href=\"/52cc3c8c7169dad705b98dc90ab33d10.css\"><link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"><script src=\"https://code.jquery.com/jquery-3.6.0.js\" integrity=\"sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=\" crossorigin=\"anonymous\"></script><title>Изменить</title></head><body><div class=\"container\"><!-- значени readonly записывается в переменную только в случае если указано значение 'on' иначе readonly отменятеся--><!-- записывается значение title в переменную, только если активирован readonly--><!-- Добавление модификаторов при установлении их значений--><form action=\"#\"><div class=\"text-field\"><input class=\"text-field__input  text-field_size_l\" type=\"email\" placeholder=\"Email\"></div></form><!--  - if (options.In==inputType === 'text' || options.inputType === 'email')input.text-field_input(\n  type = options.inputType \n  placeholder = options.placeholder \n)--><!-- значени readonly записывается в переменную только в случае если указано значение 'on' иначе readonly отменятеся--><!-- записывается значение title в переменную, только если активирован readonly--><!-- Добавление модификаторов при установлении их значений--><form action=\"#\"><div class=\"text-field  text-field_type_dropdown\"><input class=\"text-field__input  text-field_size_l text-field_input-type_dropdown\" readonly=\"readonly\" value=\"Сколько гостей\"><!--Записываем в const массивы с item'ами для dropdown --><!--Для простоты и наглядности записываем доступ к значению вложенного объекта в объект 'options'--><!--И задаём условие, что если заданно значени 'values', то записываем его в const, иначе - массив с нулями--><!--Выбор набора item'ов в зависимости от значения ключа 'item' в объекте 'dropdown'--><label class=\"text-field__icon text-field__icon_dropdown\"><span class=\"material-icons\">expand_more</span></label><div class=\"text-field__dropdown-expander\" id=\"expander\"> <!--Для каждого значения в массиве item'ов, а также для каждого значения value создаётся свой expander-list--><div class=\"text-field__expander-list\"><div class=\"text-field__expander-item\">взрослые</div><div class=\"text-field__expander-selectors\"> <div class=\"text-field__expander-btn text-field__expander-btn_dec\">-</div><div class=\"text-field__expander-value\">0</div><div class=\"text-field__expander-btn text-field__expander-btn_inc\">+</div></div></div><div class=\"text-field__expander-list\"><div class=\"text-field__expander-item\">дети</div><div class=\"text-field__expander-selectors\"> <div class=\"text-field__expander-btn text-field__expander-btn_dec\">-</div><div class=\"text-field__expander-value\">0</div><div class=\"text-field__expander-btn text-field__expander-btn_inc\">+</div></div></div><div class=\"text-field__expander-list\"><div class=\"text-field__expander-item\">младенцы</div><div class=\"text-field__expander-selectors\"> <div class=\"text-field__expander-btn text-field__expander-btn_dec\">-</div><div class=\"text-field__expander-value\">0</div><div class=\"text-field__expander-btn text-field__expander-btn_inc\">+</div></div></div></div></div></form><!--  - if (options.In==inputType === 'text' || options.inputType === 'email')input.text-field_input(\n  type = options.inputType \n  placeholder = options.placeholder \n)--><!-- значени readonly записывается в переменную только в случае если указано значение 'on' иначе readonly отменятеся--><!-- записывается значение title в переменную, только если активирован readonly--><!-- Добавление модификаторов при установлении их значений--><form action=\"#\"><div class=\"text-field\"><input class=\"text-field__input  text-field_size_l text-field_mask_on\" type=\"text\" placeholder=\"ДД.ММ.ГГГГ\"></div></form><!--  - if (options.In==inputType === 'text' || options.inputType === 'email')input.text-field_input(\n  type = options.inputType \n  placeholder = options.placeholder \n)--><!-- значени readonly записывается в переменную только в случае если указано значение 'on' иначе readonly отменятеся--><!-- записывается значение title в переменную, только если активирован readonly--><!-- Добавление модификаторов при установлении их значений--><form action=\"#\"><div class=\"text-field\"><input class=\"text-field__input  text-field_size_m\" type=\"email\" placeholder=\"Email\"><div class=\"text-field__icon text-field__icon_subsrciption\"><span class=\"material-icons\">arrow_forward</span></div></div></form><!--  - if (options.In==inputType === 'text' || options.inputType === 'email')input.text-field_input(\n  type = options.inputType \n  placeholder = options.placeholder \n)--></div><!-- подключение плагина Masked--><script src=\"https://cdn.jsdelivr.net/npm/jquery.maskedinput@1.4.1/src/jquery.maskedinput.min.js\" type=\"text/javascript\"></script>\n<script src=\"/57b91b1cfe21f3cca8bf1a01c7ed2383.js\" type=\"text/javascript\"></script>\n<script src=\"/b74b2627ac79ef5b5872ca63aa8a14c3.js\" type=\"text/javascript\"></script></body></html>"},"sourceMaps":null,"error":null,"hash":"26531ce42ff6ffb66a3b490b9b4d05fa","cacheData":{}}